# -*- coding: utf-8 -*-
"""NID_KNN_classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1g1bdFxXTypMJy-I86zubAAHkrDYEsOGK

## Importing libraries
"""

import pandas as pd
import numpy as np

"""## Loading the dataset

"""

# Load the dataset
df = pd.read_csv('test_data.csv')

# Preprocess the dataset
# Convert categorical variables to numerical using one-hot encoding
df = pd.get_dummies(df, columns=['protocol_type', 'service', 'flag'])

# Split the dataset into features and target variable
X = df.drop('xAttack', axis=1)
y = df['xAttack']

"""## Spliting dataset into training and test set"""

# Split the dataset into training and testing sets
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""## Feature Scaling"""

# Standardize the features
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

"""## Training the model"""

# Train the model
from sklearn.neighbors import KNeighborsClassifier
classifier = KNeighborsClassifier(n_neighbors = 5, metric = 'minkowski', p = 2)
classifier.fit(X_train, y_train)

"""## Predicting the test set results"""

# Make predictions
y_pred = classifier.predict(X_test_scaled)
print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.values.reshape(len(y_test),1)),1))

"""## Evaluating the model"""

# Evaluate the model
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred))
print("\nClassification Report:")
print(classification_report(y_test, y_pred))
print("\nAccuracy score:")
accuracy_score(y_test, y_pred)